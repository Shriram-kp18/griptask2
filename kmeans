#packages required
%matplotlib inline
import matplotlib.pyplot as plt
import seaborn as sns # for plot styling
import numpy as np
#fake blobs
from sklearn.datasets.samples_generator import make_blobs
X, y_true = make_blobs(n_samples=300, centers=2,
                       cluster_std=0.60, random_state=0)
plt.scatter(X[:,0], X[:,1], s=50);
#loading iris
from sklearn import datasets
iris = datasets.load_iris()
print(iris)
#packages
import numpy as np
from sklearn import datasets
import matplotlib.pyplot as plt
import pandas as pd
#setting up dataframe
irisdata = datasets.load_iris()
df = pd.DataFrame(irisdata.data)
print(df)
#setting up x for fitting into kmeans
from sklearn.cluster import KMeans
x = df.iloc[:, [0, 1, 2, 3]].values
kmeans = KMeans(n_clusters=3)
kmeans.fit(x)
y_kmeans = kmeans.predict(x)
#setting up plot points
plt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], 
            s = 60, c = 'red', label = 'Iris-setosa')
plt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], 
            s = 60, c = 'blue', label = 'Iris-versicolour')
plt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1],
            s = 60, c = 'green', label = 'Iris-virginica')
centers = kmeans.cluster_centers_
# Plotting the centroids of the clusters
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], 
            s = 60, c = 'yellow', label = 'Centroids')

plt.legend()
#centers.
print(centers)
